<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SSCC | Jason A. French]]></title>
  <link href="http://frenchja.github.com/blog/categories/sscc/atom.xml" rel="self"/>
  <link href="http://frenchja.github.com/"/>
  <updated>2014-07-03T13:19:45-07:00</updated>
  <id>http://frenchja.github.com/</id>
  <author>
    <name><![CDATA[Jason A. French]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Faster SSCC  Access using Bash]]></title>
    <link href="http://frenchja.github.com/blog/2012/04/05/faster-sscc-access-using-bash/"/>
    <updated>2012-04-05T19:08:00-07:00</updated>
    <id>http://frenchja.github.com/blog/2012/04/05/faster-sscc-access-using-bash</id>
    <content type="html"><![CDATA[<p>I use SSH regularly to login remotely to servers for experiments and
data analysis.  For instance, <a href="http://www.it.northwestern.edu/research/sscc/">Northwestern's Social Sciences Computing
Cluster</a> is available with an
SSH remote login and using <a href="https://en.wikipedia.org/wiki/X_Window_System">X11</a>
forwarding, I can access <a href="http://www.rstudio.org/">RStudio</a> and run analyses
that require more memory than my office iMac has.  However, logging into the
SSCC over SSH isn't as quick and launching a program in Spotlight.</p>

<p>While browsing a friend's .bashrc on Github, I realized I could
use a simple Bash function to speed things up.  Copy and paste the following
into Terminal:
``` bash Launching RStudio Remotely over SSH
echo "function Rsscc() {</p>

<pre><code>ssh  -c arcfour,blowfish-cbc \
    -XC netid@hardin.it.northwestern.edu rstudio
wait $1
exit 0
</code></pre>

<p>}" >> ~/.profile
<code>
After you restart Terminal.app, you can launch RStudio remotely by typing
`Rsscc`, or whatever you renamed my function to.  In principle, you could also
create a simple menu for choosing among multiple servers or programs using a bit of
[read](http://ss64.com/bash/read.html) and
[case](http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_03.html).
</code> bash Creating a Simple Command Menu
task_menu () {
cat &lt;&lt; EOF
$(tput setaf 5)Remote Login$(tput sgr0)
$(tput setaf 5)============$(tput sgr0)</p>

<p>Please choose one of the following:</p>

<p>1) RStudio
2) Stata</p>

<p>EOF</p>

<pre><code>read -r choice
case "$choice" in
    1) task="rstudio" ;;
    2) task="xstata" ;;
    *) echo "Please choose a number!" &amp;&amp; task_menu ;;
esac
</code></pre>

<p>fi
ssh -c arcfour,blowfish-cbc \</p>

<pre><code>-XC netid@hardin.it.northwestern.edu $task
wait $1
exit 0
</code></pre>

<p>}
```</p>

<p><em>Note:</em>  This works best if you're using an up-to-date version of X11, such as
<a href="http://xquartz.macosforge.org/trac/wiki">XQuartz</a> and are accessing the SSCC
using Ethernet.</p>
]]></content>
  </entry>
  
</feed>
